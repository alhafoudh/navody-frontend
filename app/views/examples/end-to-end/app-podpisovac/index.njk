{% extends "podanie-gov.njk" %}

{% from "button/macro.njk" import govukButton %}

{% block header %}



    {{ govukHeader({
        productName: 'slovensko.sk 2.0 - Podpisovač',
        homepageUrl: '/app/trvaly-pobyt'
    }) }}
{% endblock %}

{% block main %}
    <style>
        .btn-start-podpisuj {
            display: none;
        }

        .next-step {
          display: none;
        }

      .signer-step {
        margin-top: 15px;
        padding: 15px 20px;
        font-weight: bold;
        border: 1px solid rgba(0, 0, 0, 0.15);
        transition: background-color 0.5s ease,
        color 0.5s ease;
      }

      .signer-step small {
        font-weight: normal;
      }

      .signer-step.error {
        color: #ff4349;
        border-color: rgba(255, 67, 73, 0.3);
      }

      .done {
        color: #9c9c9c;
        font-size: 16px;
        margin-top: 5px;
        font-weight: normal;
        border: none;
        padding: 0;
      }

      .done:before {
        content: '\2714';
        padding-right: 10px;
      }

      .bok-form {
        background-image: url(/app/end-to-end/assets/bok-form.png);
        background-repeat: no-repeat;
        background-position: center center;
        background-color: rgba(128, 128, 128, 0.8);
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        display: none;
        outline: none !important;
      }

      .pin-form {
        background-image: url(/app/end-to-end/assets/pin-form.png);
        background-repeat: no-repeat;
        background-position: center center;
        background-color: rgba(128, 128, 128, 0.8);
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        display: none;
        outline: none !important;
        z-index: 100000;
      }

      .document-signer {
        background-image: url(/app/end-to-end/assets/document-signer.png);
        background-repeat: no-repeat;
        background-position: center center;
        background-color: rgba(128, 128, 128, 0.8);
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        display: none;
        outline: none !important;
        z-index: 100000;
      }

        .document-signer:active,
        .document-signer:focus,
        .pin-form:active,
        .pin-form:focus,
        .bok-form:active,
        .bok-form:focus {
          background-color: rgba(255, 255, 255, 0);
        }
    </style>

  <div class="signer-step" style="display: none;" data-step="1" data-done-text="Aplikácia eID je spustená">
    Spustite aplikáciu eID.
  </div>

  <div class="signer-step" style="display: none;" data-step="2" data-done-text="Čítačka kariet je zapojená">
    Zapojte čítačku kariet.
  </div>

  <div class="signer-step" style="display: none;" data-step="3" data-done-text="Občiansky preukaz je odomknutý">
    Občiansky preukaz nie je odomknutý<br>
    <small>O chvíľu sa spustí aplikácia, v ktorej zadáte BOK kód, čím odomknete občiansky preukaz.</small>
  </div>

  <div class="signer-step error" style="display: none;" data-step="4" data-replace="true" data-done-text="Občiansky preukaz je odomknutý">
    <div>Pri odomykaní občianskeho preukazu nastala chyba. Skúste odomykanie zopakovať.</div>
    <div style="margin-top: 10px">
      <button class="govuk-button govuk-button__secondary enter-bok">Odomknúť</button>
    </div>
  </div>

  <div class="signer-step" style="display: none;" data-step="5" data-wait="2000" data-after-wait="5000" data-done-text="Podpisovať budete certifikátom: Katarína Mrkvičková">
    Overuje sa dostupnosť certifikátov<br>
    <small>Prosím čakajte dokým sa zistía dostupné certifikáty.</small>
  </div>

  <a href="#" class="bok-form"></a>
  <a href="#" class="pin-form"></a>
  <a href="#" class="document-signer"></a>

    <div class="message-and-files">
        <p style="color: gray;">
          {{ bucket.message }}
        </p>

      <table class="govuk-table">
        <tbody class="govuk-table__body">
        {% for file in bucket.files %}
          <tr class="govuk-table__row">
            <td class="govuk-table__cell"><span id="file-name-{{ loop.index0 }}" class="file-name">{{ file.name }}</span></td>
            <td class="govuk-table__cell" id="file-status-{{ loop.index0 }}">nepodpísaný</td>
          </tr>
        {% endfor %}
        </tbody>
      </table>
    </div>

    <div id="state-unsigned">
        <p id="inital-warning">
          {% set multipleFiles = bucket.files|length > 1 %}
            Chystáte sa podpísať {{ bucket.files|length }} {% if multipleFiles %}dokumenty{% else %}dokument{% endif %} Vašim elektronickým podpisom.<br>
            <strong>Obsah {% if multipleFiles %}dokumentov{% else %}dokumentu{% endif %} si riadne skontrolujte pred potvrdením podpisu kódom PIN.</strong>
        </p>

      <div class="govuk-warning-text" id="signing-in-progress" style="display: none;">
            <span class="govuk-warning-text__icon" aria-hidden="true">!</span>
            <strong class="govuk-warning-text__text">
                <span class="govuk-warning-text__assistive">Info</span>
                Prebieha podpisovanie v aplikácii.
            </strong>
        </div>

        <div style="display: none; margin-bottom: 0;" class="step-run-app govuk-error-summary optional-extra-class" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary">
            <h2 class="govuk-error-summary__title" id="error-summary-title">
                Spustite podpisovaciu aplikáciu
            </h2>
            <div class="govuk-error-summary__body">
                <p style="margin: 0;">
                    <small style="color: gray;">
                        Aplikáciu si môžete <a href="https://www.podpisuj.sk/download" target="_blank">stiahnuť z podpisuj.sk</a>
                    </small>
                </p>
            </div>
        </div>

        <div style="display: none; margin-bottom: 0;" class="step-app-busy govuk-error-summary optional-extra-class" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="error-summary">
            <h2 class="govuk-error-summary__title" id="error-summary-title">
                V aplikácii sú už dokumenty na podpísanie
            </h2>
            <div class="govuk-error-summary__body">
                <p style="margin: 0;">
                    Zrušte podpisovanie dokumentov v aplikácii, aby ste mohli začať podpisovať znovu.
                </p>
            </div>
        </div>

        <div style="margin-bottom: -10px; margin-top: 60px;" id="start-close-buttons">
            <a href="/app/slovensko.sk/podpisovanie" id="start-signing" class="govuk-button">Začať podpisovanie</a>
            <a href="{{ bucket.failUrl }}" style="border: none; color: gray; font-size: 15px; text-decoration: none !important; padding-top: 12px; margin-left: 30px; display: inline-block">Zavrieť</a>
        </div>
    </div>

    <form method="post" action="{{ back_url }}" id="continue-form" style="display: none;">
        <input type="hidden" name="bucket" value="">
        <button class="govuk-button">Pokračovať (<span id="continue-button-timeout">10</span>)</button>
    </form>


  <button class="next-step" data-step="1" style="
          position: absolute;
          right: 10px;
          top: -1000px;">ďalší krok</button>
{% endblock %}

{% block js %}
    <script>
        var bucket = {{ bucket_json | safe }};

        var fileName = '{{ file.name }}';
        var fileContent = '{{ file.content }}';
        var fileMimeType = '{{ file.mime_type }}';

        var useSigner = localStorage.getItem('podanie-settings-use-signer') || 'fake';
        var goBackAfterSign = localStorage.getItem('podanie-settings-go-back-after-sign') || 'immediately';

        var podpisujskAppRunningInterval;

        var $progress = $('#signing-in-progress');

        function continueButtonTimeout()
        {
          var $button = $('#continue-button-timeout');

          var value = parseInt($button.text());

          if (goBackAfterSign !== 'immediately' && value > 1)
          {
            $button.text(value - 1);

            setTimeout(continueButtonTimeout, 1000);
          }
          else
          {
            $button.closest('form').submit();
          }
        }

        function ensurePodpisujskSession(execute) {
          $.post('/app/podpisovac/api/podpisujsk-credentials').done(function (config) {

            clearInterval(podpisujskAppRunningInterval);

            $.get(config.status_url)
              .done(function (response) {
                $('.step-run-app').hide();

                if (response.accountInfo.user === null) {
                  $.post(
                    config.login_url,
                    {
                      username: config.params.username,
                      partnerId: config.params.partnerId,
                      authorizationCode: config.params.authorizationCode
                    }
                  )
                    .done(function() {
                      execute(config)
                    })
                    .fail(function (error) {
                      if (error.status === 503) {
                        $('.step-app-busy').show();
                      }
                    });
                } else {
                  execute(config)
                }
              })
              .fail(function (error) {
                if (error.status === 0) {
                  $('.step-run-app').show();
                  podpisujskAppRunningInterval = setTimeout(function () {
                    ensurePodpisujskSession(execute);
                  }, 1000);
                }
              });
          });
        }

        function fakeSignerSignDocument(index, done) {
          setTimeout(function () {
            bucket.files[index].signed = true;
            bucket.files[index].name = bucket.files[index].name + '.asice';

            $('.document-signer').show().on('click', function (event) {
              event.preventDefault();
              $('.document-signer').hide()
              $('.document-signer').off('click');

              $('.pin-form').show().on('click', function (event) {
                event.preventDefault();
                $('.pin-form').hide();
                $('.pin-form').off('click');
                $('#file-status-' + index).html('podpisuje sa...');
                setTimeout(function() {
                  done(true);
                }, 1000);
              });
            });
          }, 2000);
        }

        function podpisujskSignerSignDocument(index, done) {
            ensurePodpisujskSession(function(config) {
              var file = bucket.files[index];

              var form = new FormData();

              form.append("authorizationCode", config.params.authorizationCode);
              form.append('file-1', b64toBlob(file.data, file.mimeType), file.name);
              form.append('addTimestamp', false);
              form.append('signTogether', false);
              form.append('createASiC', true);

              $progress.show();
              var noError = true;

              setTimeout(function() {
                if (noError) {
                  $('.step-app-busy').hide();
                  $('#start-signing').hide();
                }
              }, 2000);

              $.ajax({
                method: 'POST',
                enctype: 'multipart/form-data',
                url: config.sign_url,
                data: form,
                processData: false,
                contentType: false
              })
                .done(function(response){
                  $progress.hide();
                  $('.step-app-busy').hide();
                  if (Array.isArray(response.files) && response.files.length === 1)
                  {
                    var signedFile = response.files[0];

                    bucket.files[index].signed = true;
                    bucket.files[index].name = signedFile.name;
                    bucket.files[index].mimeType = signedFile.mediaType;
                    bucket.files[index].data = signedFile.binaryData;

                    done(true);
                  }
                  else
                  {
                    done(false);
                  }
                })
                .fail(function(error) {
                  if (error.status === 503) {
                    noError = false
                    clearInterval(podpisujskAppRunningInterval);
                    setTimeout(function() {
                      podpisujskSignerSignDocument(index, done);
                    }, 1000);
                    $('#start-signing').show();
                    $('.step-app-busy').show();
                  }
                });
            });
        }

        function signDocument(index) {
          var signerSignDocument = null;
          $('#file-status-' + index).html('spúšťa sa podpisovanie...');

          if (useSigner === 'fake')
          {
            signerSignDocument = fakeSignerSignDocument;
          }
          else if (useSigner === 'podpisujsk')
          {
            signerSignDocument = podpisujskSignerSignDocument;
          }

          setTimeout(function() {
            signerSignDocument && signerSignDocument(index, function (success) {
              setTimeout(function() {
                if (success) {
                  $('#file-name-' + index).addClass('done');
                  $('#file-status-' + index).html(success ? 'podpísaný' : 'chyba pri podpisovaní');
                }

                if (bucket.files.length > index + 1) {
                  signDocument(index + 1);
                } else {
                  $('#start-close-buttons').hide();
                  $('#signing-in-progress').hide();
                  $('#in-progress').hide();
                  $('#continue-form').show();
                  $('input[name=bucket]').val(JSON.stringify(bucket));
                  continueButtonTimeout();
                }
              }, useSigner === 'fake' ? 1000 : 0);
            })
          }, useSigner === 'fake' ? 1000 : 0);
        }

        var wasSigningInitiated = false;

        function showFakeStep(step) {
          var $step = $('.signer-step[data-step=' + step + ']');

          $step.show();

          if (step > 1) {
            var $previousStep = $('.signer-step[data-step=' + (step - 1) + ']');
            $previousStep.text($previousStep.data('done-text')).removeClass('error').addClass('done');

            if ($step.data('replace')) {
              $previousStep.hide();
            }
          }

          if ($step.data('wait')) {
            $('.next-step').hide();
            setTimeout(function() {
              showFakeStep(step + 1)

              $('.next-step').show();
            }, parseInt($step.data('wait')));
          }
          else {
            step++;
            $('.next-step').data('step', step);
          }

          if ($step.length === 0 && !wasSigningInitiated) {
            wasSigningInitiated = true;
            signDocument(0);

            $('.next-step').hide();
            // $('.signer-step').hide();
            $('.message-and-files').show().css({marginTop: '30px'});
            $progress.show();
          }
        }

        function keydownHandler(event) {
          event.preventDefault();

            showFakeStep(parseInt($('.next-step').data('step')));
        }

        $('.next-step').click(keydownHandler);
        $(document).keyup(function(event) {
          if(event.key === "Escape") {
            keydownHandler(event);
          }
        });

        $('.enter-bok').click(function(event) {
        event.preventDefault();
        $('.bok-form').show().click(function(event) {
          event.preventDefault();
          $('.bok-form').hide()
          showFakeStep(5);
        });
      });

      $('#start-signing').on('click', function(event) {
        event.preventDefault();
        $('#inital-warning').hide();
        $('#start-signing').hide();

        if (useSigner === 'fake')
        {
          $('.message-and-files').slideUp();
          $('.next-step').show();

          setTimeout(function() {
            showFakeStep(1);
          }, 250);
        }
        else
        {
          $progress.show();

          signDocument(0);
        }
      })

      var b64toBlob = function(b64Data, contentType) {
        var sliceSize = 512;
        var byteCharacters = atob(b64Data);
        var byteArrays = [];

        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
          var slice = byteCharacters.slice(offset, offset + sliceSize);

          var byteNumbers = new Array(slice.length);
          for (var i = 0; i < slice.length; i++) {
            byteNumbers[i] = slice.charCodeAt(i);
          }

          var byteArray = new Uint8Array(byteNumbers);
          byteArrays.push(byteArray);
        }

        var blob = new Blob(byteArrays, {type: contentType});
        return blob;
      }

      var utf8TextToBlob = function(byteCharacters, contentType) {
        var sliceSize = 512;
        var byteArrays = [];

        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
          var slice = byteCharacters.slice(offset, offset + sliceSize);

          var byteNumbers = new Array(slice.length);
          for (var i = 0; i < slice.length; i++) {
            byteNumbers[i] = slice.charCodeAt(i);
          }

          var byteArray = new Uint8Array(byteNumbers);
          byteArrays.push(byteArray);
        }

        var blob = new Blob(byteArrays, {type: contentType});
        return blob;
      }
    </script>
{% endblock %}
